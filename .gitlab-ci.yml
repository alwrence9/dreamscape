image: node:18.18.0

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

#all stages
stages:
  - build
  - lint
  - test
  - deploy

cache:
    key:
      files:
        - ./server/package.json
    paths:
      - .cache/server
    key:
      files:
        - ./client/package.json
    paths:
      - .cache/client

#build phase
build-frontend:
  stage: build
  script:
    - cd client
    - npm install
    - npm ci --cache .cache/client
    - npm run build
  only:
  artifacts:
    expire_in: 1 days
    when: on_success
    paths:
      - client/build
      - client/node_modules

build-backend:
  stage: build
  script:
    - cd server
    - npm install
    - npm ci --cache .cache/server
  artifacts:
    expire_in: 1 days
    when: on_success
    paths:
      - server

#linting phase
lint-client:
  stage: lint 
  script:
    - cd client
    - npm ci --cache .cache/client
    - npm run lint
  allow_failure: false

lint-server:
  stage: lint 
  script:
    - cd server
    - npm ci --cache .cache/client
    - npm run lint
  allow_failure: false

#test phase
server-test:
  stage: test
  script:
    - cd server
    - npm ci --cache .cache/server
    - npm run test
  allow_failure: false

#deploy stage
deploy:
  stage: deploy
  image:  mcr.microsoft.com/azure-cli
  dependencies:
    - build-frontend
    - build-backend
  only:
    - main
    - dev
  before_script:
    - apk update
    - apk add zip
    - "az login --allow-no-subscriptions --service-principal -u $AZ_SP_ID -p $AZ_SP_SECRET --tenant $AZ_TENANT"
  script:
    - zip -r deploy.zip client/build server ./package.json
    - "az webapp config appsettings set --resource-group $RESOURCE_GROUP_NAME --name $APP_NAME --settings WEBSITE_RUN_FROM_PACKAGE='1' ATLAS_URI=$ATLAS_URI AZURE_SAS=$AZURE_SAS"
    - "az webapp deployment source config-zip --resource-group $RESOURCE_GROUP_NAME --name $APP_NAME --src deploy.zip"
